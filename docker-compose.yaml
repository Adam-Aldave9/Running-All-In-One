version: '3'
services:
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.4.4
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - "22181:2181"

  # kafka:
  #   image: confluentinc/cp-kafka:7.4.4
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "29092:29092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: <Add advertised listeners here>
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, <add advertised listeners mapping here>
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # init-kafka-container:
  #   image: confluentinc/cp-kafka:7.4.4
  #   depends_on:
  #     - kafka
  #   entrypoint: [ '/bin/sh', '-c' ]
  #   command: |
  #     'sh -c "(sleep 40) && (kafka-topics --delete --bootstrap-server kafka:29092 --topic users) && (echo \"Done\") && (kafka-topics --list --bootstrap-server kafka:29092) && (kafka-topics --bootstrap-server kafka:29092 --describe --topic users) && (kafka-topics --bootstrap-server kafka:29092 --alter --topic users --partitions 2) && (kafka-topics --bootstrap-server kafka:29092 --describe --topic users)"'
  

  auth-db:
    image: postgres
    container_name: auth-db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: auth
      PGPORT: 5432
    volumes:
      - C:\postgres_container_data\auth:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  user-profile-db:
    image: postgres
    container_name: user-profile-db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: userprofile
      PGPORT: 5433
    volumes:
      - C:\postgres_container_data\userprofile:/var/lib/postgresql/data
    ports:
      - "5433:5433"

  scheduling-db:
    image: postgres
    container_name: scheduling-db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: scheduling
      PGPORT: 5434
    volumes:
      - C:\postgres_container_data\scheduling:/var/lib/postgresql/data
    ports:
      - "5434:5434"

  authorization-service:
    build: ./Backend/Authorization/auth
    container_name: authorization-service
    depends_on:
      - auth-db
    ports:
      - "8080:8080"

  user-profile-management-service:
    build: ./Backend/UserProfileManagement/UserProfileManagement
    container_name: user-profile-management-service
    depends_on:
      - user-profile-db
    ports:
      - "8081:8081"

  # partner-request-service:
  #   build: ./Backend/PartnerRequests
  #   ports:
  #     - "8000:8000"

  scheduling-service:
    build: ./Backend/SchedulingAndTracking/Scheduling
    container_name: scheduling-service
    depends_on:
      - scheduling-db
    ports:
      - "8082:8082"

  # frontend:
  #   build: ./Frontend/running-buddy-finder
  #   ports:
  #     - "3000:3000"


